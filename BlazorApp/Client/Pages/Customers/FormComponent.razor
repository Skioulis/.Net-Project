@* This Razor component provides a form for creating and editing existing customer data. 
It leverages Blazor's data binding and validation features to create a user-friendly experience. *@


@* The form is initially rendered in a disabled state using the Disabled property to be used as for viewing the Customre.
When a specific editing action triggers , the Disabled property is set to false, enabling user interaction with the form fields.
Upon clicking the submit button (@ButtonText), the OnValidSubmit method is invoked if the form data is valid. This method would likely handle sending the updated customer data to the server for persistence. *@

<EditForm Model="@customer" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
    <div class="form-group">
        <label>Company Name</label>
        <div>
            <InputText @bind-Value="@customer.CompanyName" class="form-control" />
            <ValidationMessage For="@(() => customer.CompanyName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Contact Name</label>
        <div>
            <InputText @bind-Value="@customer.ContactName" class="form-control" />
            <ValidationMessage For="@(() => customer.ContactName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Address</label>
        <div>
            <InputText @bind-Value="@customer.Address" class="form-control" />
            <ValidationMessage For="@(() => customer.Address)" />
        </div>
    </div>

    <div class="form-group">
        <label>City</label>
        <div>
            <InputText @bind-Value="@customer.City" class="form-control" />
            <ValidationMessage For="@(() => customer.City)" />
        </div>
    </div>

    <div class="form-group">
        <label>Region</label>
        <div>
            <InputText @bind-Value="@customer.Region" class="form-control" />
            <ValidationMessage For="@(() => customer.Region)" />
        </div>
    </div>

    <div class="form-group">
        <label>Postal Code</label>
        <div>
            <InputText @bind-Value="@customer.PostalCode" class="form-control" />
            <ValidationMessage For="@(() => customer.PostalCode)" />
        </div>
    </div>

 @*    <div class="form-group">
        <label>Country</label>
        <div>
            <InputText @bind-Value="@customer.Country" class="form-control" />
            <ValidationMessage For="@(() => customer.Country)" />
        </div>
    </div> *@
        @* apo edw  gia tin lista me tis xwres*@
        <div class="form-group">
            <label>Country List</label>
            <div>
                <select @bind="customer.Country" class="form-control">
                    <option value="">--Select Country</option>
                    @foreach (var country in _countries)
                    {
                        <option value="@country.CountryName">@country.CountryName</option>
                    }
                </select>
            </div>
        </div>
        @* ews edw *@

    <div class="form-group">
        <label>Phone Number</label>
        <div>
            <InputText @bind-Value="@customer.Phone" class="form-control" />
            <ValidationMessage For="@(() => customer.Phone)" />
        </div>
    </div>
   
    </fieldset>
    <br />


    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
        <br />
    }
    
    
   
</EditForm>
<br />
<BackToList Target="customers" />


@code{
    
}
